lines ::=<lines> <line>
line::= <start> 
start:== MAIN <lcb> <statements> <rcb>
statements::= <statementMore> 
statementMore::= <statement> | <statementMore> <statement>
statement::= <assign> | <ifElse> | <while> | <commentbegins>  | <predicateCall> | <createlist> | <message> | <predicate> 
predicate::= <identifier> <bracket> <list> <bracket> <lcb> <statementMore> <output> <logicalexp> <rcb>
predicatecall ::= <identifier> <bracket> <list> <bracket>
assign ::= <identifier> <equal> <true> | <identifier> <equal> <false> | <identifier> <equal> <not> <logicalexp> | <identifier> <equal> <logicalassign> <logicalexp> | <identifier> <equal> <predicatecall> | <identifier> <equal> <const> | <identifier> <equal> <input> | <listelement>  <equal> <logicalassign> <logicalexp> | <listelement> <equal> <true> | <identifier> <equal> <false> | <const> <equal> <true> | <const> <equal> <false> | <const>  <equal> <logicalassign> <logicalexp> | <const>  <equal> <predicatecall> | <const> <equal> <not> <logicalexp> 
ifElse::= <ifname> <bracket> <logicalexp> <bracket> <lcb> <statementmore> <rcb> | <ifname> <bracket> <logicalexp> <bracket> <lcb> <statementmore> <rcb> <elsename> <lcb> <statementmore> <rcb>
while ::= <whilename> <bracket> <logicalexp> <bracket> <lcb> <statementmore> <rcb>
input ::= ‘input’ ‘false’ | ‘input’ ‘true’
logicvalue ::= <term> 
term::= ‘true’ | ‘false’
type::= <identifier> | <const> | <term> | <listelement> 
listelement::=  <identifier> <lcb> <number> <rcb> 
list::= <type> | <list> <comma> <type>
createlist ::= <identifier> <lcb> <list> <rcb>
message::= ‘message’ <logicalexp>
logicalexp::= <ifandonlyifexp> <equals> <logicalexp> | <ifandonlyifexp>
ifandonlyifexp::= <impliesexp> <ifandif> <ifandonlyifexp> | <impliesexp>
<impliesexp>::= <orexp> <implies> <impliesexp> | <orexp>
<orexp> ::= <andexp> <or> <orexp> | <andexp>
<andexp> ::= <exp> <and> <andexp> | <exp>
<exp> ::= <type> | <bracket> <logicalexp> <bracket>
commentbegins::= <commentbegin> statements <commentfinish>
digit ::= [0-9]
char ::= [a-zA-Z]
identifier ::= <char> | <identifier> <digit> | <identifier> <char>
const ::= <lcb> <identifier>
number::= <digit> | <number> <digit> 
whilename ::= ‘while’
elsename ::= ‘else’
comma ::= ‘,’
bracket ::= ‘^^’
lcb ::= ‘<<‘
rcb ::= ‘>>’
commentbegin::= ‘<<<‘
commentfinish::= ‘>>>’
ifname::= ‘if’
